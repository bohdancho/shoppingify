import{c as L,a as W,h as _,b as K,n as m,t as U,d as P,w as G,S as M,r as x,e as N,s as F,f as z}from"./SyncWorker.worker-f2cc1459.js";function S(e,r,n,t){_(e);const i=K({dkLen:32,asyncTick:10},t),{c:o,dkLen:c,asyncTick:s}=i;if(m(o),m(c),m(s),o<1)throw new Error("PBKDF2: iterations (c) should be >= 1");const a=U(r),u=U(n),d=new Uint8Array(c),f=P.create(e,a),h=f._cloneInto().update(u);return{c:o,dkLen:c,asyncTick:s,DK:d,PRF:f,PRFSalt:h}}function T(e,r,n,t,i){return e.destroy(),r.destroy(),t&&t.destroy(),i.fill(0),n}function O(e,r,n,t){const{c:i,dkLen:o,DK:c,PRF:s,PRFSalt:a}=S(e,r,n,t);let u;const d=new Uint8Array(4),f=L(d),h=new Uint8Array(s.outputLen);for(let w=1,y=0;y<o;w++,y+=s.outputLen){const l=c.subarray(y,y+s.outputLen);f.setInt32(0,w,!1),(u=a._cloneInto(u)).update(d).digestInto(h),l.set(h.subarray(0,l.length));for(let E=1;E<i;E++){s._cloneInto(u).update(h).digestInto(h);for(let p=0;p<l.length;p++)l[p]^=h[p]}}return T(s,a,c,u,h)}async function V(e,r,n,t){const{c:i,dkLen:o,asyncTick:c,DK:s,PRF:a,PRFSalt:u}=S(e,r,n,t);let d;const f=new Uint8Array(4),h=L(f),w=new Uint8Array(a.outputLen);for(let y=1,l=0;l<o;y++,l+=a.outputLen){const E=s.subarray(l,l+a.outputLen);h.setInt32(0,y,!1),(d=u._cloneInto(d)).update(f).digestInto(w),E.set(w.subarray(0,E.length)),await W(i-1,c,()=>{a._cloneInto(d).update(w).digestInto(w);for(let p=0;p<E.length;p++)E[p]^=w[p]})}return T(a,u,s,d,w)}const J=(e,r,n)=>e&r^~e&n,q=(e,r,n)=>e&r^e&n^r&n,Q=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),b=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),g=new Uint32Array(64);class X extends M{constructor(){super(64,32,8,!1),this.A=b[0]|0,this.B=b[1]|0,this.C=b[2]|0,this.D=b[3]|0,this.E=b[4]|0,this.F=b[5]|0,this.G=b[6]|0,this.H=b[7]|0}get(){const{A:r,B:n,C:t,D:i,E:o,F:c,G:s,H:a}=this;return[r,n,t,i,o,c,s,a]}set(r,n,t,i,o,c,s,a){this.A=r|0,this.B=n|0,this.C=t|0,this.D=i|0,this.E=o|0,this.F=c|0,this.G=s|0,this.H=a|0}process(r,n){for(let f=0;f<16;f++,n+=4)g[f]=r.getUint32(n,!1);for(let f=16;f<64;f++){const h=g[f-15],w=g[f-2],y=x(h,7)^x(h,18)^h>>>3,l=x(w,17)^x(w,19)^w>>>10;g[f]=l+g[f-7]+y+g[f-16]|0}let{A:t,B:i,C:o,D:c,E:s,F:a,G:u,H:d}=this;for(let f=0;f<64;f++){const h=x(s,6)^x(s,11)^x(s,25),w=d+h+J(s,a,u)+Q[f]+g[f]|0,l=(x(t,2)^x(t,13)^x(t,22))+q(t,i,o)|0;d=u,u=a,a=s,s=c+w|0,c=o,o=i,i=t,t=w+l|0}t=t+this.A|0,i=i+this.B|0,o=o+this.C|0,c=c+this.D|0,s=s+this.E|0,a=a+this.F|0,u=u+this.G|0,d=d+this.H|0,this.set(t,i,o,c,s,a,u,d)}roundClean(){g.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}const Y=G(()=>new X);/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */function k(e){return e instanceof Uint8Array||e!=null&&typeof e=="object"&&e.constructor.name==="Uint8Array"}function Z(...e){const r=o=>o,n=(o,c)=>s=>o(c(s)),t=e.map(o=>o.encode).reduceRight(n,r),i=e.map(o=>o.decode).reduce(n,r);return{encode:t,decode:i}}function rr(e){return{encode:r=>{if(!Array.isArray(r)||r.length&&typeof r[0]!="number")throw new Error("alphabet.encode input should be an array of numbers");return r.map(n=>{if(n<0||n>=e.length)throw new Error(`Digit index outside alphabet: ${n} (alphabet: ${e.length})`);return e[n]})},decode:r=>{if(!Array.isArray(r)||r.length&&typeof r[0]!="string")throw new Error("alphabet.decode input should be array of strings");return r.map(n=>{if(typeof n!="string")throw new Error(`alphabet.decode: not string element=${n}`);const t=e.indexOf(n);if(t===-1)throw new Error(`Unknown letter: "${n}". Allowed: ${e}`);return t})}}}function er(e=""){if(typeof e!="string")throw new Error("join separator should be string");return{encode:r=>{if(!Array.isArray(r)||r.length&&typeof r[0]!="string")throw new Error("join.encode input should be array of strings");for(let n of r)if(typeof n!="string")throw new Error(`join.encode: non-string input=${n}`);return r.join(e)},decode:r=>{if(typeof r!="string")throw new Error("join.decode input should be string");return r.split(e)}}}function nr(e,r="="){if(typeof r!="string")throw new Error("padding chr should be string");return{encode(n){if(!Array.isArray(n)||n.length&&typeof n[0]!="string")throw new Error("padding.encode input should be array of strings");for(let t of n)if(typeof t!="string")throw new Error(`padding.encode: non-string input=${t}`);for(;n.length*e%8;)n.push(r);return n},decode(n){if(!Array.isArray(n)||n.length&&typeof n[0]!="string")throw new Error("padding.encode input should be array of strings");for(let i of n)if(typeof i!="string")throw new Error(`padding.decode: non-string input=${i}`);let t=n.length;if(t*e%8)throw new Error("Invalid padding: string should have whole number of bytes");for(;t>0&&n[t-1]===r;t--)if(!((t-1)*e%8))throw new Error("Invalid padding: string has too much padding");return n.slice(0,t)}}}function $(e,r,n){if(r<2)throw new Error(`convertRadix: wrong from=${r}, base cannot be less than 2`);if(n<2)throw new Error(`convertRadix: wrong to=${n}, base cannot be less than 2`);if(!Array.isArray(e))throw new Error("convertRadix: data should be array");if(!e.length)return[];let t=0;const i=[],o=Array.from(e);for(o.forEach(c=>{if(c<0||c>=r)throw new Error(`Wrong integer: ${c}`)});;){let c=0,s=!0;for(let a=t;a<o.length;a++){const u=o[a],d=r*c+u;if(!Number.isSafeInteger(d)||r*c/r!==c||d-u!==r*c)throw new Error("convertRadix: carry overflow");c=d%n;const f=Math.floor(d/n);if(o[a]=f,!Number.isSafeInteger(f)||f*n+c!==d)throw new Error("convertRadix: carry overflow");if(s)f?s=!1:t=a;else continue}if(i.push(c),s)break}for(let c=0;c<e.length-1&&e[c]===0;c++)i.push(0);return i.reverse()}const C=(e,r)=>r?C(r,e%r):e,v=(e,r)=>e+(r-C(e,r));function I(e,r,n,t){if(!Array.isArray(e))throw new Error("convertRadix2: data should be array");if(r<=0||r>32)throw new Error(`convertRadix2: wrong from=${r}`);if(n<=0||n>32)throw new Error(`convertRadix2: wrong to=${n}`);if(v(r,n)>32)throw new Error(`convertRadix2: carry overflow from=${r} to=${n} carryBits=${v(r,n)}`);let i=0,o=0;const c=2**n-1,s=[];for(const a of e){if(a>=2**r)throw new Error(`convertRadix2: invalid data word=${a} from=${r}`);if(i=i<<r|a,o+r>32)throw new Error(`convertRadix2: carry overflow pos=${o} from=${r}`);for(o+=r;o>=n;o-=n)s.push((i>>o-n&c)>>>0);i&=2**o-1}if(i=i<<n-o&c,!t&&o>=r)throw new Error("Excess padding");if(!t&&i)throw new Error(`Non-zero padding: ${i}`);return t&&o>0&&s.push(i>>>0),s}function tr(e){return{encode:r=>{if(!k(r))throw new Error("radix.encode input should be Uint8Array");return $(Array.from(r),2**8,e)},decode:r=>{if(!Array.isArray(r)||r.length&&typeof r[0]!="number")throw new Error("radix.decode input should be array of numbers");return Uint8Array.from($(r,e,2**8))}}}function or(e,r=!1){if(e<=0||e>32)throw new Error("radix2: bits should be in (0..32]");if(v(8,e)>32||v(e,8)>32)throw new Error("radix2: carry overflow");return{encode:n=>{if(!k(n))throw new Error("radix2.encode input should be Uint8Array");return I(Array.from(n),8,e,!r)},decode:n=>{if(!Array.isArray(n)||n.length&&typeof n[0]!="number")throw new Error("radix2.decode input should be array of numbers");return Uint8Array.from(I(n,e,8,r))}}}function cr(e,r){if(typeof r!="function")throw new Error("checksum fn should be function");return{encode(n){if(!k(n))throw new Error("checksum.encode: input should be Uint8Array");const t=r(n).slice(0,e),i=new Uint8Array(n.length+e);return i.set(n),i.set(t,n.length),i},decode(n){if(!k(n))throw new Error("checksum.decode: input should be Uint8Array");const t=n.slice(0,-e),i=r(t).slice(0,e),o=n.slice(-e);for(let c=0;c<e;c++)if(i[c]!==o[c])throw new Error("Invalid checksum");return t}}}const A={alphabet:rr,chain:Z,checksum:cr,convertRadix:$,convertRadix2:I,radix:tr,radix2:or,join:er,padding:nr};/*! scure-bip39 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) */const ir=e=>e[0]==="あいこくしん";function B(e){if(typeof e!="string")throw new TypeError(`Invalid mnemonic type: ${typeof e}`);return e.normalize("NFKD")}function R(e){const r=B(e),n=r.split(" ");if(![12,15,18,21,24].includes(n.length))throw new Error("Invalid mnemonic");return{nfkd:r,words:n}}function D(e){z(e,16,20,24,28,32)}function ur(e,r=128){if(m(r),r%32!==0||r>256)throw new TypeError("Invalid entropy");return fr(N(r/8),e)}const sr=e=>{const r=8-e.length/4;return new Uint8Array([Y(e)[0]>>r<<r])};function j(e){if(!Array.isArray(e)||e.length!==2048||typeof e[0]!="string")throw new Error("Wordlist: expected array of 2048 strings");return e.forEach(r=>{if(typeof r!="string")throw new Error(`Wordlist: non-string element: ${r}`)}),A.chain(A.checksum(1,sr),A.radix2(11,!0),A.alphabet(e))}function ar(e,r){const{words:n}=R(e),t=j(r).decode(n);return D(t),t}function fr(e,r){return D(e),j(r).encode(e).join(ir(r)?"　":" ")}function hr(e,r){try{ar(e,r)}catch{return!1}return!0}const H=e=>B(`mnemonic${e}`);function wr(e,r=""){return V(F,R(e).nfkd,H(r),{c:2048,dkLen:64})}function lr(e,r=""){return O(F,R(e).nfkd,H(r),{c:2048,dkLen:64})}export{fr as entropyToMnemonic,ur as generateMnemonic,ar as mnemonicToEntropy,wr as mnemonicToSeed,lr as mnemonicToSeedSync,hr as validateMnemonic};
